name: hufi-recording-oracle

x-service-default-config:
  restart: &default-restart unless-stopped
  logging: &default-logging
    options:
      max-size: 10m
      max-file: 3

x-hardcoded-vars:
  minio_root_user: &minio_root_user minioadmin
  minio_root_password: &minio_root_password minioadmin
  minio_services_access_key: &minio_services_access_key pk_minio_recording-oracle
  minio_services_secret_key: &minio_services_secret_key sk_minio_recording-oracle

services:
  postgres:
    container_name: hufi-recording-oracle-db
    image: postgres:latest
    restart: *default-restart
    logging:
      <<: *default-logging
    environment:
      POSTGRES_USER: default
      POSTGRES_PASSWORD: qwerty
      POSTGRES_DB: recording-oracle
    ports:
      - name: instance_port
        target: 5432
        published: 5433
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres-data:/var/lib/postgresql/data

  minio:
    container_name: hufi-recording-oracle-minio
    image: minio/minio:RELEASE.2024-12-18T13-15-44Z
    restart: *default-restart
    logging:
      <<: *default-logging
    entrypoint: 'sh'
    ports:
      - name: instance_port
        target: 9000
        published: 9000
      - name: console_port
        target: 9001
        published: 9001
    volumes:
      - minio-data:/data
    environment:
      MINIO_ROOT_USER: *minio_root_user
      MINIO_ROOT_PASSWORD: *minio_root_password
    command:
      -c "minio server /data --console-address ':9001'"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 5s
      retries: 3

  minio-mc:
    container_name: hufi-recording-oracle-minio-client
    image: minio/mc:RELEASE.2024-11-21T17-21-54Z
    depends_on:
      minio:
        condition: service_healthy
    environment:
      MINIO_ROOT_USER: *minio_root_user
      MINIO_ROOT_PASSWORD: *minio_root_password
      SERVICES_ACCESS_KEY: *minio_services_access_key
      SERVICES_SECRET_KEY: *minio_services_secret_key
      BUCKET_NAME_RECORDINGS: recordings
    entrypoint: >
      /bin/sh -c "
        mc alias set myminio http://minio:9000 $$MINIO_ROOT_USER $$MINIO_ROOT_PASSWORD

        mc admin user add myminio $$SERVICES_ACCESS_KEY $$SERVICES_SECRET_KEY
        mc admin policy attach myminio readwrite --user=$$SERVICES_ACCESS_KEY

        mc mb myminio/$$BUCKET_NAME_RECORDINGS;
        mc anonymous set public myminio/$$BUCKET_NAME_RECORDINGS;
      "

volumes:
  postgres-data:
  minio-data: